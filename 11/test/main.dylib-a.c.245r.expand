
;; Function createStack (createStack, funcdef_no=6, decl_uid=3054, cgraph_uid=7, symbol_order=6)

struct Stack_t * createStack ()
{
  struct Stack_t * out;
  struct Stack_t * D.3124;
  long unsigned int _1;
  void * _2;
  char * _3;
  struct Stack_t * _14;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  out_5 = 0B;
  out_8 = malloc (24);
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
  out_8->size = 10;
  _1 = out_8->size;
  _2 = malloc (_1);
  out_8->data = _2;
  _3 = out_8->data;
  if (_3 == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  free (out_8);
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       3
;;                4
  out_8->top = 0;
  _14 = out_8;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       5
<L4>:
  return _14;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 5 (out_5 - 5 )
Partition 8 (out_8 - 8 )
Partition 14 (_14 - 14 )
Partition 15 (_15(D) - 15 )


Coalescible Partition map 

Partition 0, base 0 (out_5 - 5 8 )
Partition 2, base 1 (_15(D) - 15 )


Partition map 

Partition 0 (out_5 - 5 )
Partition 1 (out_8 - 8 )
Partition 2 (_15(D) - 15 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) out_5 <-> out_8

Partition map 

Partition 0 (out_5 - 5 )
Partition 1 (out_8 - 8 )
Partition 2 (_15(D) - 15 )

Coalesce list: (5)out_5 & (8)out_8 [map: 0, 1] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (out_5 - 5 8 )
Partition 4 (_14 - 14 )
Partition 5 (_15(D) - 15 )

struct Stack_t * createStack ()
{
  struct Stack_t * out;
  struct Stack_t * D.3124;
  long unsigned int _1;
  void * _2;
  char * _3;
  struct Stack_t * _14;
  struct Stack_t * _15(D);

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  out_5 = 0B;
  out_8 = malloc (24);
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
  out_8->size = 10;
  _1 = out_8->size;
  _2 = malloc (_1);
  out_8->data = _2;
  _3 = out_8->data;
  if (_3 == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  free (out_8);
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       3
;;                4
  out_8->top = 0;
  _14 = out_8;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       5
<L4>:
  return _14;
;;    succ:       EXIT

}


Partition 0: size 8 align 8
	out_5

;; Generating RTL for gimple basic block 2

;; out_5 = 0B;

(insn 5 4 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 out+0 S8 A64])
        (const_int 0 [0])) "a.c":6:14 -1
     (nil))

;; out_8 = malloc (24);

(insn 6 5 7 (set (reg:DI 5 di)
        (const_int 24 [0x18])) "a.c":7:11 -1
     (nil))

(call_insn 7 6 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fa9f2ad4800 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "a.c":7:11 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 8 7 9 (set (reg/f:DI 87)
        (reg:DI 0 ax)) "a.c":7:11 -1
     (expr_list:REG_NOALIAS (reg/f:DI 87)
        (nil)))

(insn 9 8 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 out+0 S8 A64])
        (reg/f:DI 87)) "a.c":7:11 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; out_8->size = 10;

(insn 11 10 12 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 out+0 S8 A64])) "a.c":11:15 -1
     (nil))

(insn 12 11 0 (set (mem:DI (plus:DI (reg/f:DI 88)
                (const_int 8 [0x8])) [4 out_8->size+0 S8 A64])
        (const_int 10 [0xa])) "a.c":11:15 -1
     (nil))

;; _1 = out_8->size;

(insn 13 12 14 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 out+0 S8 A64])) "a.c":12:27 -1
     (nil))

(insn 14 13 0 (set (reg:DI 82 [ _1 ])
        (mem:DI (plus:DI (reg/f:DI 89)
                (const_int 8 [0x8])) [4 out_8->size+0 S8 A64])) "a.c":12:27 -1
     (nil))

;; _2 = malloc (_1);

(insn 15 14 16 (set (reg:DI 5 di)
        (reg:DI 82 [ _1 ])) "a.c":12:17 -1
     (nil))

(call_insn 16 15 17 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fa9f2ad4800 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "a.c":12:17 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 17 16 18 (set (reg/f:DI 90)
        (reg:DI 0 ax)) "a.c":12:17 -1
     (expr_list:REG_NOALIAS (reg/f:DI 90)
        (nil)))

(insn 18 17 0 (set (reg/f:DI 83 [ _2 ])
        (reg/f:DI 90)) "a.c":12:17 -1
     (nil))

;; out_8->data = _2;

(insn 19 18 20 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 out+0 S8 A64])) "a.c":12:15 -1
     (nil))

(insn 20 19 0 (set (mem/f:DI (reg/f:DI 91) [3 out_8->data+0 S8 A64])
        (reg/f:DI 83 [ _2 ])) "a.c":12:15 -1
     (nil))

;; _3 = out_8->data;

(insn 21 20 22 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 out+0 S8 A64])) "a.c":13:12 -1
     (nil))

(insn 22 21 0 (set (reg/f:DI 84 [ _3 ])
        (mem/f:DI (reg/f:DI 92) [3 out_8->data+0 S8 A64])) "a.c":13:12 -1
     (nil))

;; if (_3 == 0B)

(insn 23 22 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 84 [ _3 ])
            (const_int 0 [0]))) "a.c":13:8 -1
     (nil))

(jump_insn 24 23 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "a.c":13:8 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; free (out_8);

(insn 26 25 27 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 out+0 S8 A64])) "a.c":14:9 -1
     (nil))

(insn 27 26 28 (set (reg:DI 5 di)
        (reg:DI 93)) "a.c":14:9 -1
     (nil))

(call_insn 28 27 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fa9f2acdd00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "a.c":14:9 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 5

;; 

(code_label 29 28 30 2 (nil) [0 uses])

(note 30 29 0 NOTE_INSN_BASIC_BLOCK)

;; out_8->top = 0;

(insn 31 30 32 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 out+0 S8 A64])) "a.c":17:14 -1
     (nil))

(insn 32 31 0 (set (mem:DI (plus:DI (reg/f:DI 94)
                (const_int 16 [0x10])) [4 out_8->top+0 S8 A64])
        (const_int 0 [0])) "a.c":17:14 -1
     (nil))

;; _14 = out_8;

(insn 33 32 0 (set (reg/f:DI 85 [ _14 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 out+0 S8 A64])) "a.c":18:12 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; <L4>:

(code_label 34 33 35 3 (nil) [0 uses])

(note 35 34 0 NOTE_INSN_BASIC_BLOCK)

;; return _14;

(insn 36 35 37 (set (reg/f:DI 86 [ <retval> ])
        (reg/f:DI 85 [ _14 ])) "a.c":18:12 -1
     (nil))

(jump_insn 37 36 38 (set (pc)
        (label_ref 0)) "a.c":18:12 -1
     (nil))

(barrier 38 37 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Removing jump 37.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 out+0 S8 A64])
        (const_int 0 [0])) "a.c":6:14 -1
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (const_int 24 [0x18])) "a.c":7:11 -1
     (nil))
(call_insn 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fa9f2ad4800 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "a.c":7:11 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 87)
        (reg:DI 0 ax)) "a.c":7:11 -1
     (expr_list:REG_NOALIAS (reg/f:DI 87)
        (nil)))
(insn 9 8 11 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 out+0 S8 A64])
        (reg/f:DI 87)) "a.c":7:11 -1
     (nil))
(insn 11 9 12 2 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 out+0 S8 A64])) "a.c":11:15 -1
     (nil))
(insn 12 11 13 2 (set (mem:DI (plus:DI (reg/f:DI 88)
                (const_int 8 [0x8])) [4 out_8->size+0 S8 A64])
        (const_int 10 [0xa])) "a.c":11:15 -1
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 out+0 S8 A64])) "a.c":12:27 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 82 [ _1 ])
        (mem:DI (plus:DI (reg/f:DI 89)
                (const_int 8 [0x8])) [4 out_8->size+0 S8 A64])) "a.c":12:27 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg:DI 82 [ _1 ])) "a.c":12:17 -1
     (nil))
(call_insn 16 15 17 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fa9f2ad4800 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "a.c":12:17 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 90)
        (reg:DI 0 ax)) "a.c":12:17 -1
     (expr_list:REG_NOALIAS (reg/f:DI 90)
        (nil)))
(insn 18 17 19 2 (set (reg/f:DI 83 [ _2 ])
        (reg/f:DI 90)) "a.c":12:17 -1
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 out+0 S8 A64])) "a.c":12:15 -1
     (nil))
(insn 20 19 21 2 (set (mem/f:DI (reg/f:DI 91) [3 out_8->data+0 S8 A64])
        (reg/f:DI 83 [ _2 ])) "a.c":12:15 -1
     (nil))
(insn 21 20 22 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 out+0 S8 A64])) "a.c":13:12 -1
     (nil))
(insn 22 21 23 2 (set (reg/f:DI 84 [ _3 ])
        (mem/f:DI (reg/f:DI 92) [3 out_8->data+0 S8 A64])) "a.c":13:12 -1
     (nil))
(insn 23 22 24 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 84 [ _3 ])
            (const_int 0 [0]))) "a.c":13:8 -1
     (nil))
(jump_insn 24 23 25 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) "a.c":13:8 -1
     (nil)
 -> 29)
;;  succ:       5 (FALLTHRU)
;;              6

;; basic block 5, loop depth 0, maybe hot
;;  prev block 2, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 out+0 S8 A64])) "a.c":14:9 -1
     (nil))
(insn 27 26 28 5 (set (reg:DI 5 di)
        (reg:DI 93)) "a.c":14:9 -1
     (nil))
(call_insn 28 27 29 5 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fa9f2acdd00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "a.c":14:9 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              5 (FALLTHRU)
(code_label 29 28 30 6 2 (nil) [1 uses])
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 out+0 S8 A64])) "a.c":17:14 -1
     (nil))
(insn 32 31 33 6 (set (mem:DI (plus:DI (reg/f:DI 94)
                (const_int 16 [0x10])) [4 out_8->top+0 S8 A64])
        (const_int 0 [0])) "a.c":17:14 -1
     (nil))
(insn 33 32 36 6 (set (reg/f:DI 85 [ _14 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 out+0 S8 A64])) "a.c":18:12 -1
     (nil))
(insn 36 33 40 6 (set (reg/f:DI 86 [ <retval> ])
        (reg/f:DI 85 [ _14 ])) "a.c":18:12 -1
     (nil))
(insn 40 36 41 6 (set (reg/i:DI 0 ax)
        (reg/f:DI 86 [ <retval> ])) "a.c":19:1 -1
     (nil))
(insn 41 40 0 6 (use (reg/i:DI 0 ax)) "a.c":19:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function deleteStack (deleteStack, funcdef_no=7, decl_uid=3053, cgraph_uid=8, symbol_order=7)

void deleteStack (struct Stack_t * * stack)
{
  struct Stack_t * _1;
  char * _2;
  struct Stack_t * _3;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = *stack_5(D);
  _2 = _1->data;
  free (_2);
  _3 = *stack_5(D);
  free (_3);
  *stack_5(D) = 0B;
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 5 (stack_5(D) - 5 )


Coalescible Partition map 

Partition 0, base 0 (stack_5(D) - 5 )


Partition map 

Partition 0 (stack_5(D) - 5 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (stack_5(D) - 5 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (stack_5(D) - 5 )

void deleteStack (struct Stack_t * * stack)
{
  struct Stack_t * _1;
  char * _2;
  struct Stack_t * _3;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = *stack_5(D);
  _2 = _1->data;
  free (_2);
  _3 = *stack_5(D);
  free (_3);
  *stack_5(D) = 0B;
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = *stack_5(D);

(insn 6 5 7 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 stack+0 S8 A64])) "a.c":22:11 -1
     (nil))

(insn 7 6 0 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (reg/f:DI 85) [1 *stack_5(D)+0 S8 A64])) "a.c":22:11 -1
     (nil))

;; _2 = _1->data;

(insn 8 7 0 (set (reg/f:DI 83 [ _2 ])
        (mem/f:DI (reg/f:DI 82 [ _1 ]) [3 _1->data+0 S8 A64])) "a.c":22:18 -1
     (nil))

;; free (_2);

(insn 9 8 10 (set (reg:DI 5 di)
        (reg/f:DI 83 [ _2 ])) "a.c":22:5 -1
     (nil))

(call_insn 10 9 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fa9f2acdd00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "a.c":22:5 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _3 = *stack_5(D);

(insn 11 10 12 (set (reg/f:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 stack+0 S8 A64])) "a.c":23:5 -1
     (nil))

(insn 12 11 0 (set (reg/f:DI 84 [ _3 ])
        (mem/f:DI (reg/f:DI 86) [1 *stack_5(D)+0 S8 A64])) "a.c":23:5 -1
     (nil))

;; free (_3);

(insn 13 12 14 (set (reg:DI 5 di)
        (reg/f:DI 84 [ _3 ])) "a.c":23:5 -1
     (nil))

(call_insn 14 13 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fa9f2acdd00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "a.c":23:5 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; *stack_5(D) = 0B;

(insn 15 14 16 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 stack+0 S8 A64])) "a.c":24:12 -1
     (nil))

(insn 16 15 0 (set (mem/f:DI (reg/f:DI 87) [1 *stack_5(D)+0 S8 A64])
        (const_int 0 [0])) "a.c":24:12 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 stack+0 S8 A64])
        (reg:DI 5 di [ stack ])) "a.c":21:35 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 stack+0 S8 A64])) "a.c":22:11 -1
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (reg/f:DI 85) [1 *stack_5(D)+0 S8 A64])) "a.c":22:11 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 83 [ _2 ])
        (mem/f:DI (reg/f:DI 82 [ _1 ]) [3 _1->data+0 S8 A64])) "a.c":22:18 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ _2 ])) "a.c":22:5 -1
     (nil))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fa9f2acdd00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "a.c":22:5 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 stack+0 S8 A64])) "a.c":23:5 -1
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 84 [ _3 ])
        (mem/f:DI (reg/f:DI 86) [1 *stack_5(D)+0 S8 A64])) "a.c":23:5 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 84 [ _3 ])) "a.c":23:5 -1
     (nil))
(call_insn 14 13 15 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fa9f2acdd00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "a.c":23:5 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 stack+0 S8 A64])) "a.c":24:12 -1
     (nil))
(insn 16 15 0 2 (set (mem/f:DI (reg/f:DI 87) [1 *stack_5(D)+0 S8 A64])
        (const_int 0 [0])) "a.c":24:12 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function resize (resize, funcdef_no=8, decl_uid=3056, cgraph_uid=9, symbol_order=8)

void resize (struct Stack_t * stack)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  char * _4;
  void * _5;
  char * _6;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = stack_8(D)->size;
  _2 = _1 + 5;
  stack_8(D)->size = _2;
  _3 = stack_8(D)->size;
  _4 = stack_8(D)->data;
  _5 = realloc (_4, _3);
  stack_8(D)->data = _5;
  _6 = stack_8(D)->data;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 8 (stack_8(D) - 8 )


Coalescible Partition map 

Partition 0, base 0 (stack_8(D) - 8 )


Partition map 

Partition 0 (stack_8(D) - 8 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (stack_8(D) - 8 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (stack_8(D) - 8 )

void resize (struct Stack_t * stack)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  char * _4;
  void * _5;
  char * _6;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = stack_8(D)->size;
  _2 = _1 + 5;
  stack_8(D)->size = _2;
  _3 = stack_8(D)->size;
  _4 = stack_8(D)->data;
  _5 = realloc (_4, _3);
  stack_8(D)->data = _5;
  _6 = stack_8(D)->data;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = stack_8(D)->size;

(insn 6 5 7 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":29:17 -1
     (nil))

(insn 7 6 0 (set (reg:DI 82 [ _1 ])
        (mem:DI (plus:DI (reg/f:DI 88)
                (const_int 8 [0x8])) [4 stack_8(D)->size+0 S8 A64])) "a.c":29:17 -1
     (nil))

;; _2 = _1 + 5;

(insn 8 7 0 (parallel [
            (set (reg:DI 83 [ _2 ])
                (plus:DI (reg:DI 82 [ _1 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":29:17 -1
     (nil))

;; stack_8(D)->size = _2;

(insn 9 8 10 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":29:17 -1
     (nil))

(insn 10 9 0 (set (mem:DI (plus:DI (reg/f:DI 89)
                (const_int 8 [0x8])) [4 stack_8(D)->size+0 S8 A64])
        (reg:DI 83 [ _2 ])) "a.c":29:17 -1
     (nil))

;; _3 = stack_8(D)->size;

(insn 11 10 12 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":30:45 -1
     (nil))

(insn 12 11 0 (set (reg:DI 84 [ _3 ])
        (mem:DI (plus:DI (reg/f:DI 90)
                (const_int 8 [0x8])) [4 stack_8(D)->size+0 S8 A64])) "a.c":30:45 -1
     (nil))

;; _4 = stack_8(D)->data;

(insn 13 12 14 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":30:32 -1
     (nil))

(insn 14 13 0 (set (reg/f:DI 85 [ _4 ])
        (mem/f:DI (reg/f:DI 91) [3 stack_8(D)->data+0 S8 A64])) "a.c":30:32 -1
     (nil))

;; _5 = realloc (_4, _3);

(insn 15 14 16 (set (reg:DI 4 si)
        (reg:DI 84 [ _3 ])) "a.c":30:19 -1
     (nil))

(insn 16 15 17 (set (reg:DI 5 di)
        (reg/f:DI 85 [ _4 ])) "a.c":30:19 -1
     (nil))

(call_insn 17 16 18 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7fa9f2ad7600 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) "a.c":30:19 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 18 17 0 (set (reg/f:DI 86 [ _5 ])
        (reg:DI 0 ax)) "a.c":30:19 -1
     (nil))

;; stack_8(D)->data = _5;

(insn 19 18 20 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":30:17 -1
     (nil))

(insn 20 19 0 (set (mem/f:DI (reg/f:DI 92) [3 stack_8(D)->data+0 S8 A64])
        (reg/f:DI 86 [ _5 ])) "a.c":30:17 -1
     (nil))

;; _6 = stack_8(D)->data;

(insn 21 20 22 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":31:14 -1
     (nil))

(insn 22 21 0 (set (reg/f:DI 87 [ _6 ])
        (mem/f:DI (reg/f:DI 93) [3 stack_8(D)->data+0 S8 A64])) "a.c":31:14 -1
     (nil))

;; Generating RTL for gimple basic block 3


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 5 failed.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])
        (reg:DI 5 di [ stack ])) "a.c":28:29 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":29:17 -1
     (nil))
(insn 7 6 8 2 (set (reg:DI 82 [ _1 ])
        (mem:DI (plus:DI (reg/f:DI 88)
                (const_int 8 [0x8])) [4 stack_8(D)->size+0 S8 A64])) "a.c":29:17 -1
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg:DI 83 [ _2 ])
                (plus:DI (reg:DI 82 [ _1 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":29:17 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":29:17 -1
     (nil))
(insn 10 9 11 2 (set (mem:DI (plus:DI (reg/f:DI 89)
                (const_int 8 [0x8])) [4 stack_8(D)->size+0 S8 A64])
        (reg:DI 83 [ _2 ])) "a.c":29:17 -1
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":30:45 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 84 [ _3 ])
        (mem:DI (plus:DI (reg/f:DI 90)
                (const_int 8 [0x8])) [4 stack_8(D)->size+0 S8 A64])) "a.c":30:45 -1
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":30:32 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 85 [ _4 ])
        (mem/f:DI (reg/f:DI 91) [3 stack_8(D)->data+0 S8 A64])) "a.c":30:32 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (reg:DI 84 [ _3 ])) "a.c":30:19 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg/f:DI 85 [ _4 ])) "a.c":30:19 -1
     (nil))
(call_insn 17 16 18 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7fa9f2ad7600 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) "a.c":30:19 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 18 17 19 2 (set (reg/f:DI 86 [ _5 ])
        (reg:DI 0 ax)) "a.c":30:19 -1
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":30:17 -1
     (nil))
(insn 20 19 21 2 (set (mem/f:DI (reg/f:DI 92) [3 stack_8(D)->data+0 S8 A64])
        (reg/f:DI 86 [ _5 ])) "a.c":30:17 -1
     (nil))
(insn 21 20 22 2 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":31:14 -1
     (nil))
(insn 22 21 26 2 (set (reg/f:DI 87 [ _6 ])
        (mem/f:DI (reg/f:DI 93) [3 stack_8(D)->data+0 S8 A64])) "a.c":31:14 -1
     (nil))
(insn 26 22 0 2 (const_int 0 [0]) "a.c":34:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function push (push, funcdef_no=9, decl_uid=3059, cgraph_uid=10, symbol_order=9)

void push (struct Stack_t * stack, char value)
{
  long unsigned int _1;
  long unsigned int _2;
  char * _3;
  long unsigned int _4;
  char * _5;
  long unsigned int _6;
  long unsigned int _7;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = stack_10(D)->top;
  _2 = stack_10(D)->size;
  if (_1 >= _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  resize (stack_10(D));
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  _3 = stack_10(D)->data;
  _4 = stack_10(D)->top;
  _5 = _3 + _4;
  *_5 = value_12(D);
  _6 = stack_10(D)->top;
  _7 = _6 + 1;
  stack_10(D)->top = _7;
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 10 (stack_10(D) - 10 )
Partition 12 (value_12(D) - 12 )


Coalescible Partition map 

Partition 0, base 0 (stack_10(D) - 10 )
Partition 1, base 1 (value_12(D) - 12 )


Partition map 

Partition 0 (stack_10(D) - 10 )
Partition 1 (value_12(D) - 12 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (stack_10(D) - 10 )
Partition 1 (value_12(D) - 12 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (stack_10(D) - 10 )
Partition 8 (value_12(D) - 12 )

void push (struct Stack_t * stack, char value)
{
  long unsigned int _1;
  long unsigned int _2;
  char * _3;
  long unsigned int _4;
  char * _5;
  long unsigned int _6;
  long unsigned int _7;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = stack_10(D)->top;
  _2 = stack_10(D)->size;
  if (_1 >= _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  resize (stack_10(D));
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  _3 = stack_10(D)->data;
  _4 = stack_10(D)->top;
  _5 = _3 + _4;
  *_5 = value_12(D);
  _6 = stack_10(D)->top;
  _7 = _6 + 1;
  stack_10(D)->top = _7;
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = stack_10(D)->top;

(insn 9 8 10 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":37:14 -1
     (nil))

(insn 10 9 0 (set (reg:DI 82 [ _1 ])
        (mem:DI (plus:DI (reg/f:DI 91)
                (const_int 16 [0x10])) [4 stack_10(D)->top+0 S8 A64])) "a.c":37:14 -1
     (nil))

;; _2 = stack_10(D)->size;

(insn 11 10 12 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":37:28 -1
     (nil))

(insn 12 11 0 (set (reg:DI 83 [ _2 ])
        (mem:DI (plus:DI (reg/f:DI 92)
                (const_int 8 [0x8])) [4 stack_10(D)->size+0 S8 A64])) "a.c":37:28 -1
     (nil))

;; if (_1 >= _2)

(insn 13 12 14 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 82 [ _1 ])
            (reg:DI 83 [ _2 ]))) "a.c":37:8 -1
     (nil))

(jump_insn 14 13 0 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "a.c":37:8 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; resize (stack_10(D));

(insn 16 15 17 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":38:9 -1
     (nil))

(insn 17 16 18 (set (reg:DI 5 di)
        (reg:DI 93)) "a.c":38:9 -1
     (nil))

(call_insn 18 17 0 (call (mem:QI (symbol_ref:DI ("resize") [flags 0x3]  <function_decl 0x7fa9f27c4200 resize>) [0 resize S1 A8])
        (const_int 0 [0])) "a.c":38:9 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 4

;; 

(code_label 19 18 20 7 (nil) [0 uses])

(note 20 19 0 NOTE_INSN_BASIC_BLOCK)

;; _3 = stack_10(D)->data;

(insn 21 20 22 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":40:10 -1
     (nil))

(insn 22 21 0 (set (reg/f:DI 84 [ _3 ])
        (mem/f:DI (reg/f:DI 94) [3 stack_10(D)->data+0 S8 A64])) "a.c":40:10 -1
     (nil))

;; _4 = stack_10(D)->top;

(insn 23 22 24 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":40:22 -1
     (nil))

(insn 24 23 0 (set (reg:DI 85 [ _4 ])
        (mem:DI (plus:DI (reg/f:DI 95)
                (const_int 16 [0x10])) [4 stack_10(D)->top+0 S8 A64])) "a.c":40:22 -1
     (nil))

;; _5 = _3 + _4;

(insn 25 24 0 (parallel [
            (set (reg/f:DI 86 [ _5 ])
                (plus:DI (reg/f:DI 84 [ _3 ])
                    (reg:DI 85 [ _4 ])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":40:16 -1
     (nil))

;; *_5 = value_12(D);

(insn 26 25 27 (set (reg:QI 96)
        (mem/c:QI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 value+0 S1 A32])) "a.c":40:29 -1
     (nil))

(insn 27 26 0 (set (mem:QI (reg/f:DI 86 [ _5 ]) [0 *_5+0 S1 A8])
        (reg:QI 96)) "a.c":40:29 -1
     (nil))

;; _6 = stack_10(D)->top;

(insn 28 27 29 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":41:10 -1
     (nil))

(insn 29 28 0 (set (reg:DI 87 [ _6 ])
        (mem:DI (plus:DI (reg/f:DI 97)
                (const_int 16 [0x10])) [4 stack_10(D)->top+0 S8 A64])) "a.c":41:10 -1
     (nil))

;; _7 = _6 + 1;

(insn 30 29 0 (parallel [
            (set (reg:DI 88 [ _7 ])
                (plus:DI (reg:DI 87 [ _6 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":41:15 -1
     (nil))

;; stack_10(D)->top = _7;

(insn 31 30 32 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":41:15 -1
     (nil))

(insn 32 31 0 (set (mem:DI (plus:DI (reg/f:DI 98)
                (const_int 16 [0x10])) [4 stack_10(D)->top+0 S8 A64])
        (reg:DI 88 [ _7 ])) "a.c":41:15 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])
        (reg:DI 5 di [ stack ])) "a.c":36:39 -1
     (nil))
(insn 3 2 4 2 (set (reg:SI 89)
        (reg:SI 4 si [ value ])) "a.c":36:39 -1
     (nil))
(insn 4 3 5 2 (set (reg:QI 90)
        (subreg:QI (reg:SI 89) 0)) "a.c":36:39 -1
     (nil))
(insn 5 4 6 2 (set (mem/c:QI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 value+0 S1 A32])
        (reg:QI 90)) "a.c":36:39 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":37:14 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 82 [ _1 ])
        (mem:DI (plus:DI (reg/f:DI 91)
                (const_int 16 [0x10])) [4 stack_10(D)->top+0 S8 A64])) "a.c":37:14 -1
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":37:28 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 83 [ _2 ])
        (mem:DI (plus:DI (reg/f:DI 92)
                (const_int 8 [0x8])) [4 stack_10(D)->size+0 S8 A64])) "a.c":37:28 -1
     (nil))
(insn 13 12 14 2 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 82 [ _1 ])
            (reg:DI 83 [ _2 ]))) "a.c":37:8 -1
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "a.c":37:8 -1
     (nil)
 -> 19)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":38:9 -1
     (nil))
(insn 17 16 18 4 (set (reg:DI 5 di)
        (reg:DI 93)) "a.c":38:9 -1
     (nil))
(call_insn 18 17 19 4 (call (mem:QI (symbol_ref:DI ("resize") [flags 0x3]  <function_decl 0x7fa9f27c4200 resize>) [0 resize S1 A8])
        (const_int 0 [0])) "a.c":38:9 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 19 18 20 5 7 (nil) [1 uses])
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":40:10 -1
     (nil))
(insn 22 21 23 5 (set (reg/f:DI 84 [ _3 ])
        (mem/f:DI (reg/f:DI 94) [3 stack_10(D)->data+0 S8 A64])) "a.c":40:10 -1
     (nil))
(insn 23 22 24 5 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":40:22 -1
     (nil))
(insn 24 23 25 5 (set (reg:DI 85 [ _4 ])
        (mem:DI (plus:DI (reg/f:DI 95)
                (const_int 16 [0x10])) [4 stack_10(D)->top+0 S8 A64])) "a.c":40:22 -1
     (nil))
(insn 25 24 26 5 (parallel [
            (set (reg/f:DI 86 [ _5 ])
                (plus:DI (reg/f:DI 84 [ _3 ])
                    (reg:DI 85 [ _4 ])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":40:16 -1
     (nil))
(insn 26 25 27 5 (set (reg:QI 96)
        (mem/c:QI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 value+0 S1 A32])) "a.c":40:29 -1
     (nil))
(insn 27 26 28 5 (set (mem:QI (reg/f:DI 86 [ _5 ]) [0 *_5+0 S1 A8])
        (reg:QI 96)) "a.c":40:29 -1
     (nil))
(insn 28 27 29 5 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":41:10 -1
     (nil))
(insn 29 28 30 5 (set (reg:DI 87 [ _6 ])
        (mem:DI (plus:DI (reg/f:DI 97)
                (const_int 16 [0x10])) [4 stack_10(D)->top+0 S8 A64])) "a.c":41:10 -1
     (nil))
(insn 30 29 31 5 (parallel [
            (set (reg:DI 88 [ _7 ])
                (plus:DI (reg:DI 87 [ _6 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":41:15 -1
     (nil))
(insn 31 30 32 5 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":41:15 -1
     (nil))
(insn 32 31 0 5 (set (mem:DI (plus:DI (reg/f:DI 98)
                (const_int 16 [0x10])) [4 stack_10(D)->top+0 S8 A64])
        (reg:DI 88 [ _7 ])) "a.c":41:15 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function pop (pop, funcdef_no=10, decl_uid=3061, cgraph_uid=11, symbol_order=10)

char pop (struct Stack_t * stack)
{
  char D.3132;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  char * _4;
  long unsigned int _5;
  char * _6;
  char _10;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = stack_8(D)->top;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
  _2 = stack_8(D)->top;
  _3 = _2 + 18446744073709551615;
  stack_8(D)->top = _3;
  _4 = stack_8(D)->data;
  _5 = stack_8(D)->top;
  _6 = _4 + _5;
  _10 = *_6;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       3
<L2>:
  return _10;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 8 (stack_8(D) - 8 )
Partition 10 (_10 - 10 )
Partition 11 (_11(D) - 11 )


Coalescible Partition map 

Partition 0, base 0 (stack_8(D) - 8 )
Partition 1, base 1 (_11(D) - 11 )


Partition map 

Partition 0 (stack_8(D) - 8 )
Partition 1 (_11(D) - 11 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (stack_8(D) - 8 )
Partition 1 (_11(D) - 11 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (stack_8(D) - 8 )
Partition 7 (_10 - 10 )
Partition 8 (_11(D) - 11 )

char pop (struct Stack_t * stack)
{
  char D.3132;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  char * _4;
  long unsigned int _5;
  char * _6;
  char _10;
  char _11(D);

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = stack_8(D)->top;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
  _2 = stack_8(D)->top;
  _3 = _2 + 18446744073709551615;
  stack_8(D)->top = _3;
  _4 = stack_8(D)->data;
  _5 = stack_8(D)->top;
  _6 = _4 + _5;
  _10 = *_6;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       3
<L2>:
  return _10;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = stack_8(D)->top;

(insn 6 5 7 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":46:14 -1
     (nil))

(insn 7 6 0 (set (reg:DI 82 [ _1 ])
        (mem:DI (plus:DI (reg/f:DI 90)
                (const_int 16 [0x10])) [4 stack_8(D)->top+0 S8 A64])) "a.c":46:14 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _2 = stack_8(D)->top;

(insn 9 8 10 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":49:10 -1
     (nil))

(insn 10 9 0 (set (reg:DI 83 [ _2 ])
        (mem:DI (plus:DI (reg/f:DI 91)
                (const_int 16 [0x10])) [4 stack_8(D)->top+0 S8 A64])) "a.c":49:10 -1
     (nil))

;; _3 = _2 + 18446744073709551615;

(insn 11 10 0 (parallel [
            (set (reg:DI 84 [ _3 ])
                (plus:DI (reg:DI 83 [ _2 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":49:15 -1
     (nil))

;; stack_8(D)->top = _3;

(insn 12 11 13 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":49:15 -1
     (nil))

(insn 13 12 0 (set (mem:DI (plus:DI (reg/f:DI 92)
                (const_int 16 [0x10])) [4 stack_8(D)->top+0 S8 A64])
        (reg:DI 84 [ _3 ])) "a.c":49:15 -1
     (nil))

;; _4 = stack_8(D)->data;

(insn 14 13 15 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":50:17 -1
     (nil))

(insn 15 14 0 (set (reg/f:DI 85 [ _4 ])
        (mem/f:DI (reg/f:DI 93) [3 stack_8(D)->data+0 S8 A64])) "a.c":50:17 -1
     (nil))

;; _5 = stack_8(D)->top;

(insn 16 15 17 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":50:29 -1
     (nil))

(insn 17 16 0 (set (reg:DI 86 [ _5 ])
        (mem:DI (plus:DI (reg/f:DI 94)
                (const_int 16 [0x10])) [4 stack_8(D)->top+0 S8 A64])) "a.c":50:29 -1
     (nil))

;; _6 = _4 + _5;

(insn 18 17 0 (parallel [
            (set (reg/f:DI 87 [ _6 ])
                (plus:DI (reg/f:DI 85 [ _4 ])
                    (reg:DI 86 [ _5 ])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":50:23 -1
     (nil))

;; _10 = *_6;

(insn 19 18 0 (set (reg:QI 88 [ _10 ])
        (mem:QI (reg/f:DI 87 [ _6 ]) [0 *_6+0 S1 A8])) "a.c":50:23 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; <L2>:

(code_label 20 19 21 9 (nil) [0 uses])

(note 21 20 0 NOTE_INSN_BASIC_BLOCK)

;; return _10;

(insn 22 21 23 (set (reg:QI 89 [ <retval> ])
        (reg:QI 88 [ _10 ])) "a.c":50:23 -1
     (nil))

(jump_insn 23 22 24 (set (pc)
        (label_ref 0)) "a.c":50:23 -1
     (nil))

(barrier 24 23 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.
Removing jump 23.
Merging block 6 into block 2...
Merged blocks 2 and 6.
Merged 2 and 6 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])
        (reg:DI 5 di [ stack ])) "a.c":45:26 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":46:14 -1
     (nil))
(insn 7 6 9 2 (set (reg:DI 82 [ _1 ])
        (mem:DI (plus:DI (reg/f:DI 90)
                (const_int 16 [0x10])) [4 stack_8(D)->top+0 S8 A64])) "a.c":46:14 -1
     (nil))
(insn 9 7 10 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":49:10 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 83 [ _2 ])
        (mem:DI (plus:DI (reg/f:DI 91)
                (const_int 16 [0x10])) [4 stack_8(D)->top+0 S8 A64])) "a.c":49:10 -1
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg:DI 84 [ _3 ])
                (plus:DI (reg:DI 83 [ _2 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":49:15 -1
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":49:15 -1
     (nil))
(insn 13 12 14 2 (set (mem:DI (plus:DI (reg/f:DI 92)
                (const_int 16 [0x10])) [4 stack_8(D)->top+0 S8 A64])
        (reg:DI 84 [ _3 ])) "a.c":49:15 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":50:17 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 85 [ _4 ])
        (mem/f:DI (reg/f:DI 93) [3 stack_8(D)->data+0 S8 A64])) "a.c":50:17 -1
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":50:29 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 86 [ _5 ])
        (mem:DI (plus:DI (reg/f:DI 94)
                (const_int 16 [0x10])) [4 stack_8(D)->top+0 S8 A64])) "a.c":50:29 -1
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg/f:DI 87 [ _6 ])
                (plus:DI (reg/f:DI 85 [ _4 ])
                    (reg:DI 86 [ _5 ])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":50:23 -1
     (nil))
(insn 19 18 22 2 (set (reg:QI 88 [ _10 ])
        (mem:QI (reg/f:DI 87 [ _6 ]) [0 *_6+0 S1 A8])) "a.c":50:23 -1
     (nil))
(insn 22 19 26 2 (set (reg:QI 89 [ <retval> ])
        (reg:QI 88 [ _10 ])) "a.c":50:23 -1
     (nil))
(insn 26 22 27 2 (set (reg/i:QI 0 ax)
        (reg:QI 89 [ <retval> ])) "a.c":51:1 -1
     (nil))
(insn 27 26 0 2 (use (reg/i:QI 0 ax)) "a.c":51:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function peek (peek, funcdef_no=11, decl_uid=3063, cgraph_uid=12, symbol_order=11)

char peek (const struct Stack_t * stack)
{
  char D.3136;
  long unsigned int _1;
  char * _2;
  long unsigned int _3;
  sizetype _4;
  char * _5;
  char _8;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = stack_7(D)->top;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
  _2 = stack_7(D)->data;
  _3 = stack_7(D)->top;
  _4 = _3 + 18446744073709551615;
  _5 = _2 + _4;
  _8 = *_5;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       3
<L2>:
  return _8;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 7 (stack_7(D) - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9(D) - 9 )


Coalescible Partition map 

Partition 0, base 0 (stack_7(D) - 7 )
Partition 1, base 1 (_9(D) - 9 )


Partition map 

Partition 0 (stack_7(D) - 7 )
Partition 1 (_9(D) - 9 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (stack_7(D) - 7 )
Partition 1 (_9(D) - 9 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (stack_7(D) - 7 )
Partition 6 (_8 - 8 )
Partition 7 (_9(D) - 9 )

char peek (const struct Stack_t * stack)
{
  char D.3136;
  long unsigned int _1;
  char * _2;
  long unsigned int _3;
  sizetype _4;
  char * _5;
  char _8;
  char _9(D);

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = stack_7(D)->top;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
  _2 = stack_7(D)->data;
  _3 = stack_7(D)->top;
  _4 = _3 + 18446744073709551615;
  _5 = _2 + _4;
  _8 = *_5;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       3
<L2>:
  return _8;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = stack_7(D)->top;

(insn 6 5 7 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":53:14 -1
     (nil))

(insn 7 6 0 (set (reg:DI 82 [ _1 ])
        (mem:DI (plus:DI (reg/f:DI 89)
                (const_int 16 [0x10])) [4 stack_7(D)->top+0 S8 A64])) "a.c":53:14 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _2 = stack_7(D)->data;

(insn 9 8 10 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":56:17 -1
     (nil))

(insn 10 9 0 (set (reg/f:DI 83 [ _2 ])
        (mem/f:DI (reg/f:DI 90) [3 stack_7(D)->data+0 S8 A64])) "a.c":56:17 -1
     (nil))

;; _3 = stack_7(D)->top;

(insn 11 10 12 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":56:29 -1
     (nil))

(insn 12 11 0 (set (reg:DI 84 [ _3 ])
        (mem:DI (plus:DI (reg/f:DI 91)
                (const_int 16 [0x10])) [4 stack_7(D)->top+0 S8 A64])) "a.c":56:29 -1
     (nil))

;; _4 = _3 + 18446744073709551615;

(insn 13 12 0 (parallel [
            (set (reg:DI 85 [ _4 ])
                (plus:DI (reg:DI 84 [ _3 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":56:23 -1
     (nil))

;; _5 = _2 + _4;

(insn 14 13 0 (parallel [
            (set (reg/f:DI 86 [ _5 ])
                (plus:DI (reg/f:DI 83 [ _2 ])
                    (reg:DI 85 [ _4 ])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":56:23 -1
     (nil))

;; _8 = *_5;

(insn 15 14 0 (set (reg:QI 87 [ _8 ])
        (mem:QI (reg/f:DI 86 [ _5 ]) [0 *_5+0 S1 A8])) "a.c":56:23 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; <L2>:

(code_label 16 15 17 11 (nil) [0 uses])

(note 17 16 0 NOTE_INSN_BASIC_BLOCK)

;; return _8;

(insn 18 17 19 (set (reg:QI 88 [ <retval> ])
        (reg:QI 87 [ _8 ])) "a.c":56:23 -1
     (nil))

(jump_insn 19 18 20 (set (pc)
        (label_ref 0)) "a.c":56:23 -1
     (nil))

(barrier 20 19 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.
Removing jump 19.
Merging block 6 into block 2...
Merged blocks 2 and 6.
Merged 2 and 6 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])
        (reg:DI 5 di [ stack ])) "a.c":52:33 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":53:14 -1
     (nil))
(insn 7 6 9 2 (set (reg:DI 82 [ _1 ])
        (mem:DI (plus:DI (reg/f:DI 89)
                (const_int 16 [0x10])) [4 stack_7(D)->top+0 S8 A64])) "a.c":53:14 -1
     (nil))
(insn 9 7 10 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":56:17 -1
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 83 [ _2 ])
        (mem/f:DI (reg/f:DI 90) [3 stack_7(D)->data+0 S8 A64])) "a.c":56:17 -1
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 stack+0 S8 A64])) "a.c":56:29 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 84 [ _3 ])
        (mem:DI (plus:DI (reg/f:DI 91)
                (const_int 16 [0x10])) [4 stack_7(D)->top+0 S8 A64])) "a.c":56:29 -1
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 85 [ _4 ])
                (plus:DI (reg:DI 84 [ _3 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":56:23 -1
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg/f:DI 86 [ _5 ])
                (plus:DI (reg/f:DI 83 [ _2 ])
                    (reg:DI 85 [ _4 ])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":56:23 -1
     (nil))
(insn 15 14 18 2 (set (reg:QI 87 [ _8 ])
        (mem:QI (reg/f:DI 86 [ _5 ]) [0 *_5+0 S1 A8])) "a.c":56:23 -1
     (nil))
(insn 18 15 22 2 (set (reg:QI 88 [ <retval> ])
        (reg:QI 87 [ _8 ])) "a.c":56:23 -1
     (nil))
(insn 22 18 23 2 (set (reg/i:QI 0 ax)
        (reg:QI 88 [ <retval> ])) "a.c":57:1 -1
     (nil))
(insn 23 22 0 2 (use (reg/i:QI 0 ax)) "a.c":57:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function createFStack (createFStack, funcdef_no=12, decl_uid=3071, cgraph_uid=13, symbol_order=12)

struct Stack_f * createFStack ()
{
  struct Stack_f * out;
  struct Stack_f * D.3142;
  long unsigned int _1;
  long unsigned int _2;
  void * _3;
  double * _4;
  struct Stack_f * _15;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  out_6 = 0B;
  out_9 = malloc (24);
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
  out_9->size = 10;
  _1 = out_9->size;
  _2 = _1 * 8;
  _3 = malloc (_2);
  out_9->data = _3;
  _4 = out_9->data;
  if (_4 == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  free (out_9);
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       3
;;                4
  out_9->top = 0;
  _15 = out_9;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       5
<L4>:
  return _15;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 6 (out_6 - 6 )
Partition 9 (out_9 - 9 )
Partition 15 (_15 - 15 )
Partition 16 (_16(D) - 16 )


Coalescible Partition map 

Partition 0, base 0 (out_6 - 6 9 )
Partition 2, base 1 (_16(D) - 16 )


Partition map 

Partition 0 (out_6 - 6 )
Partition 1 (out_9 - 9 )
Partition 2 (_16(D) - 16 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) out_6 <-> out_9

Partition map 

Partition 0 (out_6 - 6 )
Partition 1 (out_9 - 9 )
Partition 2 (_16(D) - 16 )

Coalesce list: (6)out_6 & (9)out_9 [map: 0, 1] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (out_6 - 6 9 )
Partition 5 (_15 - 15 )
Partition 6 (_16(D) - 16 )

struct Stack_f * createFStack ()
{
  struct Stack_f * out;
  struct Stack_f * D.3142;
  long unsigned int _1;
  long unsigned int _2;
  void * _3;
  double * _4;
  struct Stack_f * _15;
  struct Stack_f * _16(D);

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  out_6 = 0B;
  out_9 = malloc (24);
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
  out_9->size = 10;
  _1 = out_9->size;
  _2 = _1 * 8;
  _3 = malloc (_2);
  out_9->data = _3;
  _4 = out_9->data;
  if (_4 == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  free (out_9);
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       3
;;                4
  out_9->top = 0;
  _15 = out_9;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       5
<L4>:
  return _15;
;;    succ:       EXIT

}


Partition 0: size 8 align 8
	out_6

;; Generating RTL for gimple basic block 2

;; out_6 = 0B;

(insn 5 4 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 out+0 S8 A64])
        (const_int 0 [0])) "a.c":64:14 -1
     (nil))

;; out_9 = malloc (24);

(insn 6 5 7 (set (reg:DI 5 di)
        (const_int 24 [0x18])) "a.c":65:11 -1
     (nil))

(call_insn 7 6 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fa9f2ad4800 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "a.c":65:11 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 8 7 9 (set (reg/f:DI 88)
        (reg:DI 0 ax)) "a.c":65:11 -1
     (expr_list:REG_NOALIAS (reg/f:DI 88)
        (nil)))

(insn 9 8 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 out+0 S8 A64])
        (reg/f:DI 88)) "a.c":65:11 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; out_9->size = 10;

(insn 11 10 12 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 out+0 S8 A64])) "a.c":69:15 -1
     (nil))

(insn 12 11 0 (set (mem:DI (plus:DI (reg/f:DI 89)
                (const_int 8 [0x8])) [4 out_9->size+0 S8 A64])
        (const_int 10 [0xa])) "a.c":69:15 -1
     (nil))

;; _1 = out_9->size;

(insn 13 12 14 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 out+0 S8 A64])) "a.c":70:27 -1
     (nil))

(insn 14 13 0 (set (reg:DI 82 [ _1 ])
        (mem:DI (plus:DI (reg/f:DI 90)
                (const_int 8 [0x8])) [4 out_9->size+0 S8 A64])) "a.c":70:27 -1
     (nil))

;; _2 = _1 * 8;

(insn 15 14 0 (parallel [
            (set (reg:DI 83 [ _2 ])
                (ashift:DI (reg:DI 82 [ _1 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":70:17 -1
     (nil))

;; _3 = malloc (_2);

(insn 16 15 17 (set (reg:DI 5 di)
        (reg:DI 83 [ _2 ])) "a.c":70:17 -1
     (nil))

(call_insn 17 16 18 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fa9f2ad4800 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "a.c":70:17 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 18 17 19 (set (reg/f:DI 91)
        (reg:DI 0 ax)) "a.c":70:17 -1
     (expr_list:REG_NOALIAS (reg/f:DI 91)
        (nil)))

(insn 19 18 0 (set (reg/f:DI 84 [ _3 ])
        (reg/f:DI 91)) "a.c":70:17 -1
     (nil))

;; out_9->data = _3;

(insn 20 19 21 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 out+0 S8 A64])) "a.c":70:15 -1
     (nil))

(insn 21 20 0 (set (mem/f:DI (reg/f:DI 92) [8 out_9->data+0 S8 A64])
        (reg/f:DI 84 [ _3 ])) "a.c":70:15 -1
     (nil))

;; _4 = out_9->data;

(insn 22 21 23 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 out+0 S8 A64])) "a.c":71:12 -1
     (nil))

(insn 23 22 0 (set (reg/f:DI 85 [ _4 ])
        (mem/f:DI (reg/f:DI 93) [8 out_9->data+0 S8 A64])) "a.c":71:12 -1
     (nil))

;; if (_4 == 0B)

(insn 24 23 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 85 [ _4 ])
            (const_int 0 [0]))) "a.c":71:8 -1
     (nil))

(jump_insn 25 24 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "a.c":71:8 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; free (out_9);

(insn 27 26 28 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 out+0 S8 A64])) "a.c":72:9 -1
     (nil))

(insn 28 27 29 (set (reg:DI 5 di)
        (reg:DI 94)) "a.c":72:9 -1
     (nil))

(call_insn 29 28 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fa9f2acdd00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "a.c":72:9 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 5

;; 

(code_label 30 29 31 13 (nil) [0 uses])

(note 31 30 0 NOTE_INSN_BASIC_BLOCK)

;; out_9->top = 0;

(insn 32 31 33 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 out+0 S8 A64])) "a.c":75:14 -1
     (nil))

(insn 33 32 0 (set (mem:DI (plus:DI (reg/f:DI 95)
                (const_int 16 [0x10])) [4 out_9->top+0 S8 A64])
        (const_int 0 [0])) "a.c":75:14 -1
     (nil))

;; _15 = out_9;

(insn 34 33 0 (set (reg/f:DI 86 [ _15 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 out+0 S8 A64])) "a.c":76:12 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; <L4>:

(code_label 35 34 36 14 (nil) [0 uses])

(note 36 35 0 NOTE_INSN_BASIC_BLOCK)

;; return _15;

(insn 37 36 38 (set (reg/f:DI 87 [ <retval> ])
        (reg/f:DI 86 [ _15 ])) "a.c":76:12 -1
     (nil))

(jump_insn 38 37 39 (set (pc)
        (label_ref 0)) "a.c":76:12 -1
     (nil))

(barrier 39 38 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Removing jump 38.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 out+0 S8 A64])
        (const_int 0 [0])) "a.c":64:14 -1
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (const_int 24 [0x18])) "a.c":65:11 -1
     (nil))
(call_insn 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fa9f2ad4800 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "a.c":65:11 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 88)
        (reg:DI 0 ax)) "a.c":65:11 -1
     (expr_list:REG_NOALIAS (reg/f:DI 88)
        (nil)))
(insn 9 8 11 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 out+0 S8 A64])
        (reg/f:DI 88)) "a.c":65:11 -1
     (nil))
(insn 11 9 12 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 out+0 S8 A64])) "a.c":69:15 -1
     (nil))
(insn 12 11 13 2 (set (mem:DI (plus:DI (reg/f:DI 89)
                (const_int 8 [0x8])) [4 out_9->size+0 S8 A64])
        (const_int 10 [0xa])) "a.c":69:15 -1
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 out+0 S8 A64])) "a.c":70:27 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 82 [ _1 ])
        (mem:DI (plus:DI (reg/f:DI 90)
                (const_int 8 [0x8])) [4 out_9->size+0 S8 A64])) "a.c":70:27 -1
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:DI 83 [ _2 ])
                (ashift:DI (reg:DI 82 [ _1 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":70:17 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg:DI 83 [ _2 ])) "a.c":70:17 -1
     (nil))
(call_insn 17 16 18 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fa9f2ad4800 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "a.c":70:17 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 18 17 19 2 (set (reg/f:DI 91)
        (reg:DI 0 ax)) "a.c":70:17 -1
     (expr_list:REG_NOALIAS (reg/f:DI 91)
        (nil)))
(insn 19 18 20 2 (set (reg/f:DI 84 [ _3 ])
        (reg/f:DI 91)) "a.c":70:17 -1
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 out+0 S8 A64])) "a.c":70:15 -1
     (nil))
(insn 21 20 22 2 (set (mem/f:DI (reg/f:DI 92) [8 out_9->data+0 S8 A64])
        (reg/f:DI 84 [ _3 ])) "a.c":70:15 -1
     (nil))
(insn 22 21 23 2 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 out+0 S8 A64])) "a.c":71:12 -1
     (nil))
(insn 23 22 24 2 (set (reg/f:DI 85 [ _4 ])
        (mem/f:DI (reg/f:DI 93) [8 out_9->data+0 S8 A64])) "a.c":71:12 -1
     (nil))
(insn 24 23 25 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 85 [ _4 ])
            (const_int 0 [0]))) "a.c":71:8 -1
     (nil))
(jump_insn 25 24 26 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "a.c":71:8 -1
     (nil)
 -> 30)
;;  succ:       5 (FALLTHRU)
;;              6

;; basic block 5, loop depth 0, maybe hot
;;  prev block 2, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 out+0 S8 A64])) "a.c":72:9 -1
     (nil))
(insn 28 27 29 5 (set (reg:DI 5 di)
        (reg:DI 94)) "a.c":72:9 -1
     (nil))
(call_insn 29 28 30 5 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fa9f2acdd00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "a.c":72:9 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              5 (FALLTHRU)
(code_label 30 29 31 6 13 (nil) [1 uses])
(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 6 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 out+0 S8 A64])) "a.c":75:14 -1
     (nil))
(insn 33 32 34 6 (set (mem:DI (plus:DI (reg/f:DI 95)
                (const_int 16 [0x10])) [4 out_9->top+0 S8 A64])
        (const_int 0 [0])) "a.c":75:14 -1
     (nil))
(insn 34 33 37 6 (set (reg/f:DI 86 [ _15 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 out+0 S8 A64])) "a.c":76:12 -1
     (nil))
(insn 37 34 41 6 (set (reg/f:DI 87 [ <retval> ])
        (reg/f:DI 86 [ _15 ])) "a.c":76:12 -1
     (nil))
(insn 41 37 42 6 (set (reg/i:DI 0 ax)
        (reg/f:DI 87 [ <retval> ])) "a.c":77:1 -1
     (nil))
(insn 42 41 0 6 (use (reg/i:DI 0 ax)) "a.c":77:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function deleteFStack (deleteFStack, funcdef_no=13, decl_uid=3070, cgraph_uid=14, symbol_order=13)

void deleteFStack (struct Stack_f * * stack)
{
  struct Stack_f * _1;
  double * _2;
  struct Stack_f * _3;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = *stack_5(D);
  _2 = _1->data;
  free (_2);
  _3 = *stack_5(D);
  free (_3);
  *stack_5(D) = 0B;
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 5 (stack_5(D) - 5 )


Coalescible Partition map 

Partition 0, base 0 (stack_5(D) - 5 )


Partition map 

Partition 0 (stack_5(D) - 5 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (stack_5(D) - 5 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (stack_5(D) - 5 )

void deleteFStack (struct Stack_f * * stack)
{
  struct Stack_f * _1;
  double * _2;
  struct Stack_f * _3;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = *stack_5(D);
  _2 = _1->data;
  free (_2);
  _3 = *stack_5(D);
  free (_3);
  *stack_5(D) = 0B;
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = *stack_5(D);

(insn 6 5 7 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [9 stack+0 S8 A64])) "a.c":80:11 -1
     (nil))

(insn 7 6 0 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (reg/f:DI 85) [6 *stack_5(D)+0 S8 A64])) "a.c":80:11 -1
     (nil))

;; _2 = _1->data;

(insn 8 7 0 (set (reg/f:DI 83 [ _2 ])
        (mem/f:DI (reg/f:DI 82 [ _1 ]) [8 _1->data+0 S8 A64])) "a.c":80:18 -1
     (nil))

;; free (_2);

(insn 9 8 10 (set (reg:DI 5 di)
        (reg/f:DI 83 [ _2 ])) "a.c":80:5 -1
     (nil))

(call_insn 10 9 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fa9f2acdd00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "a.c":80:5 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _3 = *stack_5(D);

(insn 11 10 12 (set (reg/f:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [9 stack+0 S8 A64])) "a.c":81:5 -1
     (nil))

(insn 12 11 0 (set (reg/f:DI 84 [ _3 ])
        (mem/f:DI (reg/f:DI 86) [6 *stack_5(D)+0 S8 A64])) "a.c":81:5 -1
     (nil))

;; free (_3);

(insn 13 12 14 (set (reg:DI 5 di)
        (reg/f:DI 84 [ _3 ])) "a.c":81:5 -1
     (nil))

(call_insn 14 13 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fa9f2acdd00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "a.c":81:5 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; *stack_5(D) = 0B;

(insn 15 14 16 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [9 stack+0 S8 A64])) "a.c":82:12 -1
     (nil))

(insn 16 15 0 (set (mem/f:DI (reg/f:DI 87) [6 *stack_5(D)+0 S8 A64])
        (const_int 0 [0])) "a.c":82:12 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [9 stack+0 S8 A64])
        (reg:DI 5 di [ stack ])) "a.c":79:36 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [9 stack+0 S8 A64])) "a.c":80:11 -1
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (reg/f:DI 85) [6 *stack_5(D)+0 S8 A64])) "a.c":80:11 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 83 [ _2 ])
        (mem/f:DI (reg/f:DI 82 [ _1 ]) [8 _1->data+0 S8 A64])) "a.c":80:18 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ _2 ])) "a.c":80:5 -1
     (nil))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fa9f2acdd00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "a.c":80:5 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [9 stack+0 S8 A64])) "a.c":81:5 -1
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 84 [ _3 ])
        (mem/f:DI (reg/f:DI 86) [6 *stack_5(D)+0 S8 A64])) "a.c":81:5 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 84 [ _3 ])) "a.c":81:5 -1
     (nil))
(call_insn 14 13 15 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fa9f2acdd00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "a.c":81:5 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [9 stack+0 S8 A64])) "a.c":82:12 -1
     (nil))
(insn 16 15 0 2 (set (mem/f:DI (reg/f:DI 87) [6 *stack_5(D)+0 S8 A64])
        (const_int 0 [0])) "a.c":82:12 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function Fresize (Fresize, funcdef_no=14, decl_uid=3073, cgraph_uid=15, symbol_order=14)

void Fresize (struct Stack_f * stack)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  double * _5;
  void * _6;
  double * _7;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = stack_9(D)->size;
  _2 = _1 + 5;
  stack_9(D)->size = _2;
  _3 = stack_9(D)->size;
  _4 = _3 * 8;
  _5 = stack_9(D)->data;
  _6 = realloc (_5, _4);
  stack_9(D)->data = _6;
  _7 = stack_9(D)->data;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 9 (stack_9(D) - 9 )


Coalescible Partition map 

Partition 0, base 0 (stack_9(D) - 9 )


Partition map 

Partition 0 (stack_9(D) - 9 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (stack_9(D) - 9 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (stack_9(D) - 9 )

void Fresize (struct Stack_f * stack)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  double * _5;
  void * _6;
  double * _7;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = stack_9(D)->size;
  _2 = _1 + 5;
  stack_9(D)->size = _2;
  _3 = stack_9(D)->size;
  _4 = _3 * 8;
  _5 = stack_9(D)->data;
  _6 = realloc (_5, _4);
  stack_9(D)->data = _6;
  _7 = stack_9(D)->data;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = stack_9(D)->size;

(insn 6 5 7 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":87:17 -1
     (nil))

(insn 7 6 0 (set (reg:DI 82 [ _1 ])
        (mem:DI (plus:DI (reg/f:DI 89)
                (const_int 8 [0x8])) [4 stack_9(D)->size+0 S8 A64])) "a.c":87:17 -1
     (nil))

;; _2 = _1 + 5;

(insn 8 7 0 (parallel [
            (set (reg:DI 83 [ _2 ])
                (plus:DI (reg:DI 82 [ _1 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":87:17 -1
     (nil))

;; stack_9(D)->size = _2;

(insn 9 8 10 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":87:17 -1
     (nil))

(insn 10 9 0 (set (mem:DI (plus:DI (reg/f:DI 90)
                (const_int 8 [0x8])) [4 stack_9(D)->size+0 S8 A64])
        (reg:DI 83 [ _2 ])) "a.c":87:17 -1
     (nil))

;; _3 = stack_9(D)->size;

(insn 11 10 12 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":88:45 -1
     (nil))

(insn 12 11 0 (set (reg:DI 84 [ _3 ])
        (mem:DI (plus:DI (reg/f:DI 91)
                (const_int 8 [0x8])) [4 stack_9(D)->size+0 S8 A64])) "a.c":88:45 -1
     (nil))

;; _4 = _3 * 8;

(insn 13 12 0 (parallel [
            (set (reg:DI 85 [ _4 ])
                (ashift:DI (reg:DI 84 [ _3 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":88:19 -1
     (nil))

;; _5 = stack_9(D)->data;

(insn 14 13 15 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":88:32 -1
     (nil))

(insn 15 14 0 (set (reg/f:DI 86 [ _5 ])
        (mem/f:DI (reg/f:DI 92) [8 stack_9(D)->data+0 S8 A64])) "a.c":88:32 -1
     (nil))

;; _6 = realloc (_5, _4);

(insn 16 15 17 (set (reg:DI 4 si)
        (reg:DI 85 [ _4 ])) "a.c":88:19 -1
     (nil))

(insn 17 16 18 (set (reg:DI 5 di)
        (reg/f:DI 86 [ _5 ])) "a.c":88:19 -1
     (nil))

(call_insn 18 17 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7fa9f2ad7600 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) "a.c":88:19 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 19 18 0 (set (reg/f:DI 87 [ _6 ])
        (reg:DI 0 ax)) "a.c":88:19 -1
     (nil))

;; stack_9(D)->data = _6;

(insn 20 19 21 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":88:17 -1
     (nil))

(insn 21 20 0 (set (mem/f:DI (reg/f:DI 93) [8 stack_9(D)->data+0 S8 A64])
        (reg/f:DI 87 [ _6 ])) "a.c":88:17 -1
     (nil))

;; _7 = stack_9(D)->data;

(insn 22 21 23 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":89:14 -1
     (nil))

(insn 23 22 0 (set (reg/f:DI 88 [ _7 ])
        (mem/f:DI (reg/f:DI 94) [8 stack_9(D)->data+0 S8 A64])) "a.c":89:14 -1
     (nil))

;; Generating RTL for gimple basic block 3


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 5 failed.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])
        (reg:DI 5 di [ stack ])) "a.c":86:30 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":87:17 -1
     (nil))
(insn 7 6 8 2 (set (reg:DI 82 [ _1 ])
        (mem:DI (plus:DI (reg/f:DI 89)
                (const_int 8 [0x8])) [4 stack_9(D)->size+0 S8 A64])) "a.c":87:17 -1
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg:DI 83 [ _2 ])
                (plus:DI (reg:DI 82 [ _1 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":87:17 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":87:17 -1
     (nil))
(insn 10 9 11 2 (set (mem:DI (plus:DI (reg/f:DI 90)
                (const_int 8 [0x8])) [4 stack_9(D)->size+0 S8 A64])
        (reg:DI 83 [ _2 ])) "a.c":87:17 -1
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":88:45 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 84 [ _3 ])
        (mem:DI (plus:DI (reg/f:DI 91)
                (const_int 8 [0x8])) [4 stack_9(D)->size+0 S8 A64])) "a.c":88:45 -1
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 85 [ _4 ])
                (ashift:DI (reg:DI 84 [ _3 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":88:19 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":88:32 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 86 [ _5 ])
        (mem/f:DI (reg/f:DI 92) [8 stack_9(D)->data+0 S8 A64])) "a.c":88:32 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 4 si)
        (reg:DI 85 [ _4 ])) "a.c":88:19 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg/f:DI 86 [ _5 ])) "a.c":88:19 -1
     (nil))
(call_insn 18 17 19 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7fa9f2ad7600 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) "a.c":88:19 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 19 18 20 2 (set (reg/f:DI 87 [ _6 ])
        (reg:DI 0 ax)) "a.c":88:19 -1
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":88:17 -1
     (nil))
(insn 21 20 22 2 (set (mem/f:DI (reg/f:DI 93) [8 stack_9(D)->data+0 S8 A64])
        (reg/f:DI 87 [ _6 ])) "a.c":88:17 -1
     (nil))
(insn 22 21 23 2 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":89:14 -1
     (nil))
(insn 23 22 27 2 (set (reg/f:DI 88 [ _7 ])
        (mem/f:DI (reg/f:DI 94) [8 stack_9(D)->data+0 S8 A64])) "a.c":89:14 -1
     (nil))
(insn 27 23 0 2 (const_int 0 [0]) "a.c":92:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function Fpush (Fpush, funcdef_no=15, decl_uid=3076, cgraph_uid=16, symbol_order=15)

void Fpush (struct Stack_f * stack, double value)
{
  long unsigned int _1;
  long unsigned int _2;
  double * _3;
  long unsigned int _4;
  long unsigned int _5;
  double * _6;
  long unsigned int _7;
  long unsigned int _8;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = stack_11(D)->top;
  _2 = stack_11(D)->size;
  if (_1 >= _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  Fresize (stack_11(D));
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  _3 = stack_11(D)->data;
  _4 = stack_11(D)->top;
  _5 = _4 * 8;
  _6 = _3 + _5;
  *_6 = value_13(D);
  _7 = stack_11(D)->top;
  _8 = _7 + 1;
  stack_11(D)->top = _8;
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 11 (stack_11(D) - 11 )
Partition 13 (value_13(D) - 13 )


Coalescible Partition map 

Partition 0, base 0 (stack_11(D) - 11 )
Partition 1, base 1 (value_13(D) - 13 )


Partition map 

Partition 0 (stack_11(D) - 11 )
Partition 1 (value_13(D) - 13 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (stack_11(D) - 11 )
Partition 1 (value_13(D) - 13 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (stack_11(D) - 11 )
Partition 9 (value_13(D) - 13 )

void Fpush (struct Stack_f * stack, double value)
{
  long unsigned int _1;
  long unsigned int _2;
  double * _3;
  long unsigned int _4;
  long unsigned int _5;
  double * _6;
  long unsigned int _7;
  long unsigned int _8;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = stack_11(D)->top;
  _2 = stack_11(D)->size;
  if (_1 >= _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  Fresize (stack_11(D));
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  _3 = stack_11(D)->data;
  _4 = stack_11(D)->top;
  _5 = _4 * 8;
  _6 = _3 + _5;
  *_6 = value_13(D);
  _7 = stack_11(D)->top;
  _8 = _7 + 1;
  stack_11(D)->top = _8;
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = stack_11(D)->top;

(insn 7 6 8 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":95:14 -1
     (nil))

(insn 8 7 0 (set (reg:DI 82 [ _1 ])
        (mem:DI (plus:DI (reg/f:DI 90)
                (const_int 16 [0x10])) [4 stack_11(D)->top+0 S8 A64])) "a.c":95:14 -1
     (nil))

;; _2 = stack_11(D)->size;

(insn 9 8 10 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":95:28 -1
     (nil))

(insn 10 9 0 (set (reg:DI 83 [ _2 ])
        (mem:DI (plus:DI (reg/f:DI 91)
                (const_int 8 [0x8])) [4 stack_11(D)->size+0 S8 A64])) "a.c":95:28 -1
     (nil))

;; if (_1 >= _2)

(insn 11 10 12 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 82 [ _1 ])
            (reg:DI 83 [ _2 ]))) "a.c":95:8 -1
     (nil))

(jump_insn 12 11 0 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "a.c":95:8 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; Fresize (stack_11(D));

(insn 14 13 15 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":96:9 -1
     (nil))

(insn 15 14 16 (set (reg:DI 5 di)
        (reg:DI 92)) "a.c":96:9 -1
     (nil))

(call_insn 16 15 0 (call (mem:QI (symbol_ref:DI ("Fresize") [flags 0x3]  <function_decl 0x7fa9f27c4800 Fresize>) [0 Fresize S1 A8])
        (const_int 0 [0])) "a.c":96:9 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 4

;; 

(code_label 17 16 18 18 (nil) [0 uses])

(note 18 17 0 NOTE_INSN_BASIC_BLOCK)

;; _3 = stack_11(D)->data;

(insn 19 18 20 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":98:10 -1
     (nil))

(insn 20 19 0 (set (reg/f:DI 84 [ _3 ])
        (mem/f:DI (reg/f:DI 93) [8 stack_11(D)->data+0 S8 A64])) "a.c":98:10 -1
     (nil))

;; _4 = stack_11(D)->top;

(insn 21 20 22 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":98:22 -1
     (nil))

(insn 22 21 0 (set (reg:DI 85 [ _4 ])
        (mem:DI (plus:DI (reg/f:DI 94)
                (const_int 16 [0x10])) [4 stack_11(D)->top+0 S8 A64])) "a.c":98:22 -1
     (nil))

;; _5 = _4 * 8;

(insn 23 22 0 (parallel [
            (set (reg:DI 86 [ _5 ])
                (ashift:DI (reg:DI 85 [ _4 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":98:16 -1
     (nil))

;; _6 = _3 + _5;

(insn 24 23 0 (parallel [
            (set (reg/f:DI 87 [ _6 ])
                (plus:DI (reg/f:DI 84 [ _3 ])
                    (reg:DI 86 [ _5 ])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":98:16 -1
     (nil))

;; *_6 = value_13(D);

(insn 25 24 26 (set (reg:DF 95)
        (mem/c:DF (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [10 value+0 S8 A64])) "a.c":98:29 -1
     (nil))

(insn 26 25 0 (set (mem:DF (reg/f:DI 87 [ _6 ]) [10 *_6+0 S8 A64])
        (reg:DF 95)) "a.c":98:29 -1
     (nil))

;; _7 = stack_11(D)->top;

(insn 27 26 28 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":99:10 -1
     (nil))

(insn 28 27 0 (set (reg:DI 88 [ _7 ])
        (mem:DI (plus:DI (reg/f:DI 96)
                (const_int 16 [0x10])) [4 stack_11(D)->top+0 S8 A64])) "a.c":99:10 -1
     (nil))

;; _8 = _7 + 1;

(insn 29 28 0 (parallel [
            (set (reg:DI 89 [ _8 ])
                (plus:DI (reg:DI 88 [ _7 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":99:15 -1
     (nil))

;; stack_11(D)->top = _8;

(insn 30 29 31 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":99:15 -1
     (nil))

(insn 31 30 0 (set (mem:DI (plus:DI (reg/f:DI 97)
                (const_int 16 [0x10])) [4 stack_11(D)->top+0 S8 A64])
        (reg:DI 89 [ _8 ])) "a.c":99:15 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])
        (reg:DI 5 di [ stack ])) "a.c":94:42 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:DF (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [10 value+0 S8 A64])
        (reg:DF 20 xmm0 [ value ])) "a.c":94:42 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":95:14 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 82 [ _1 ])
        (mem:DI (plus:DI (reg/f:DI 90)
                (const_int 16 [0x10])) [4 stack_11(D)->top+0 S8 A64])) "a.c":95:14 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":95:28 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 83 [ _2 ])
        (mem:DI (plus:DI (reg/f:DI 91)
                (const_int 8 [0x8])) [4 stack_11(D)->size+0 S8 A64])) "a.c":95:28 -1
     (nil))
(insn 11 10 12 2 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 82 [ _1 ])
            (reg:DI 83 [ _2 ]))) "a.c":95:8 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) "a.c":95:8 -1
     (nil)
 -> 17)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":96:9 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 5 di)
        (reg:DI 92)) "a.c":96:9 -1
     (nil))
(call_insn 16 15 17 4 (call (mem:QI (symbol_ref:DI ("Fresize") [flags 0x3]  <function_decl 0x7fa9f27c4800 Fresize>) [0 Fresize S1 A8])
        (const_int 0 [0])) "a.c":96:9 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 17 16 18 5 18 (nil) [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":98:10 -1
     (nil))
(insn 20 19 21 5 (set (reg/f:DI 84 [ _3 ])
        (mem/f:DI (reg/f:DI 93) [8 stack_11(D)->data+0 S8 A64])) "a.c":98:10 -1
     (nil))
(insn 21 20 22 5 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":98:22 -1
     (nil))
(insn 22 21 23 5 (set (reg:DI 85 [ _4 ])
        (mem:DI (plus:DI (reg/f:DI 94)
                (const_int 16 [0x10])) [4 stack_11(D)->top+0 S8 A64])) "a.c":98:22 -1
     (nil))
(insn 23 22 24 5 (parallel [
            (set (reg:DI 86 [ _5 ])
                (ashift:DI (reg:DI 85 [ _4 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":98:16 -1
     (nil))
(insn 24 23 25 5 (parallel [
            (set (reg/f:DI 87 [ _6 ])
                (plus:DI (reg/f:DI 84 [ _3 ])
                    (reg:DI 86 [ _5 ])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":98:16 -1
     (nil))
(insn 25 24 26 5 (set (reg:DF 95)
        (mem/c:DF (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [10 value+0 S8 A64])) "a.c":98:29 -1
     (nil))
(insn 26 25 27 5 (set (mem:DF (reg/f:DI 87 [ _6 ]) [10 *_6+0 S8 A64])
        (reg:DF 95)) "a.c":98:29 -1
     (nil))
(insn 27 26 28 5 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":99:10 -1
     (nil))
(insn 28 27 29 5 (set (reg:DI 88 [ _7 ])
        (mem:DI (plus:DI (reg/f:DI 96)
                (const_int 16 [0x10])) [4 stack_11(D)->top+0 S8 A64])) "a.c":99:10 -1
     (nil))
(insn 29 28 30 5 (parallel [
            (set (reg:DI 89 [ _8 ])
                (plus:DI (reg:DI 88 [ _7 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":99:15 -1
     (nil))
(insn 30 29 31 5 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":99:15 -1
     (nil))
(insn 31 30 0 5 (set (mem:DI (plus:DI (reg/f:DI 97)
                (const_int 16 [0x10])) [4 stack_11(D)->top+0 S8 A64])
        (reg:DI 89 [ _8 ])) "a.c":99:15 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function Fpop (Fpop, funcdef_no=16, decl_uid=3078, cgraph_uid=17, symbol_order=16)

double Fpop (struct Stack_f * stack)
{
  double D.3150;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  double * _4;
  long unsigned int _5;
  long unsigned int _6;
  double * _7;
  double _11;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = stack_9(D)->top;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
  _2 = stack_9(D)->top;
  _3 = _2 + 18446744073709551615;
  stack_9(D)->top = _3;
  _4 = stack_9(D)->data;
  _5 = stack_9(D)->top;
  _6 = _5 * 8;
  _7 = _4 + _6;
  _11 = *_7;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       3
<L2>:
  return _11;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 9 (stack_9(D) - 9 )
Partition 11 (_11 - 11 )
Partition 12 (_12(D) - 12 )


Coalescible Partition map 

Partition 0, base 0 (stack_9(D) - 9 )
Partition 1, base 1 (_12(D) - 12 )


Partition map 

Partition 0 (stack_9(D) - 9 )
Partition 1 (_12(D) - 12 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (stack_9(D) - 9 )
Partition 1 (_12(D) - 12 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (stack_9(D) - 9 )
Partition 8 (_11 - 11 )
Partition 9 (_12(D) - 12 )

double Fpop (struct Stack_f * stack)
{
  double D.3150;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  double * _4;
  long unsigned int _5;
  long unsigned int _6;
  double * _7;
  double _11;
  double _12(D);

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = stack_9(D)->top;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
  _2 = stack_9(D)->top;
  _3 = _2 + 18446744073709551615;
  stack_9(D)->top = _3;
  _4 = stack_9(D)->data;
  _5 = stack_9(D)->top;
  _6 = _5 * 8;
  _7 = _4 + _6;
  _11 = *_7;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       3
<L2>:
  return _11;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = stack_9(D)->top;

(insn 6 5 7 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":104:14 -1
     (nil))

(insn 7 6 0 (set (reg:DI 82 [ _1 ])
        (mem:DI (plus:DI (reg/f:DI 91)
                (const_int 16 [0x10])) [4 stack_9(D)->top+0 S8 A64])) "a.c":104:14 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _2 = stack_9(D)->top;

(insn 9 8 10 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":107:10 -1
     (nil))

(insn 10 9 0 (set (reg:DI 83 [ _2 ])
        (mem:DI (plus:DI (reg/f:DI 92)
                (const_int 16 [0x10])) [4 stack_9(D)->top+0 S8 A64])) "a.c":107:10 -1
     (nil))

;; _3 = _2 + 18446744073709551615;

(insn 11 10 0 (parallel [
            (set (reg:DI 84 [ _3 ])
                (plus:DI (reg:DI 83 [ _2 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":107:15 -1
     (nil))

;; stack_9(D)->top = _3;

(insn 12 11 13 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":107:15 -1
     (nil))

(insn 13 12 0 (set (mem:DI (plus:DI (reg/f:DI 93)
                (const_int 16 [0x10])) [4 stack_9(D)->top+0 S8 A64])
        (reg:DI 84 [ _3 ])) "a.c":107:15 -1
     (nil))

;; _4 = stack_9(D)->data;

(insn 14 13 15 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":108:17 -1
     (nil))

(insn 15 14 0 (set (reg/f:DI 85 [ _4 ])
        (mem/f:DI (reg/f:DI 94) [8 stack_9(D)->data+0 S8 A64])) "a.c":108:17 -1
     (nil))

;; _5 = stack_9(D)->top;

(insn 16 15 17 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":108:29 -1
     (nil))

(insn 17 16 0 (set (reg:DI 86 [ _5 ])
        (mem:DI (plus:DI (reg/f:DI 95)
                (const_int 16 [0x10])) [4 stack_9(D)->top+0 S8 A64])) "a.c":108:29 -1
     (nil))

;; _6 = _5 * 8;

(insn 18 17 0 (parallel [
            (set (reg:DI 87 [ _6 ])
                (ashift:DI (reg:DI 86 [ _5 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":108:23 -1
     (nil))

;; _7 = _4 + _6;

(insn 19 18 0 (parallel [
            (set (reg/f:DI 88 [ _7 ])
                (plus:DI (reg/f:DI 85 [ _4 ])
                    (reg:DI 87 [ _6 ])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":108:23 -1
     (nil))

;; _11 = *_7;

(insn 20 19 0 (set (reg:DF 89 [ _11 ])
        (mem:DF (reg/f:DI 88 [ _7 ]) [10 *_7+0 S8 A64])) "a.c":108:23 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; <L2>:

(code_label 21 20 22 20 (nil) [0 uses])

(note 22 21 0 NOTE_INSN_BASIC_BLOCK)

;; return _11;

(insn 23 22 24 (set (reg:DF 90 [ <retval> ])
        (reg:DF 89 [ _11 ])) "a.c":108:23 -1
     (nil))

(jump_insn 24 23 25 (set (pc)
        (label_ref 0)) "a.c":108:23 -1
     (nil))

(barrier 25 24 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.
Removing jump 24.
Merging block 6 into block 2...
Merged blocks 2 and 6.
Merged 2 and 6 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])
        (reg:DI 5 di [ stack ])) "a.c":103:29 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":104:14 -1
     (nil))
(insn 7 6 9 2 (set (reg:DI 82 [ _1 ])
        (mem:DI (plus:DI (reg/f:DI 91)
                (const_int 16 [0x10])) [4 stack_9(D)->top+0 S8 A64])) "a.c":104:14 -1
     (nil))
(insn 9 7 10 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":107:10 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 83 [ _2 ])
        (mem:DI (plus:DI (reg/f:DI 92)
                (const_int 16 [0x10])) [4 stack_9(D)->top+0 S8 A64])) "a.c":107:10 -1
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg:DI 84 [ _3 ])
                (plus:DI (reg:DI 83 [ _2 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":107:15 -1
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":107:15 -1
     (nil))
(insn 13 12 14 2 (set (mem:DI (plus:DI (reg/f:DI 93)
                (const_int 16 [0x10])) [4 stack_9(D)->top+0 S8 A64])
        (reg:DI 84 [ _3 ])) "a.c":107:15 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":108:17 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 85 [ _4 ])
        (mem/f:DI (reg/f:DI 94) [8 stack_9(D)->data+0 S8 A64])) "a.c":108:17 -1
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":108:29 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 86 [ _5 ])
        (mem:DI (plus:DI (reg/f:DI 95)
                (const_int 16 [0x10])) [4 stack_9(D)->top+0 S8 A64])) "a.c":108:29 -1
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg:DI 87 [ _6 ])
                (ashift:DI (reg:DI 86 [ _5 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":108:23 -1
     (nil))
(insn 19 18 20 2 (parallel [
            (set (reg/f:DI 88 [ _7 ])
                (plus:DI (reg/f:DI 85 [ _4 ])
                    (reg:DI 87 [ _6 ])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":108:23 -1
     (nil))
(insn 20 19 23 2 (set (reg:DF 89 [ _11 ])
        (mem:DF (reg/f:DI 88 [ _7 ]) [10 *_7+0 S8 A64])) "a.c":108:23 -1
     (nil))
(insn 23 20 27 2 (set (reg:DF 90 [ <retval> ])
        (reg:DF 89 [ _11 ])) "a.c":108:23 -1
     (nil))
(insn 27 23 28 2 (set (reg/i:DF 20 xmm0)
        (reg:DF 90 [ <retval> ])) "a.c":109:1 -1
     (nil))
(insn 28 27 0 2 (use (reg/i:DF 20 xmm0)) "a.c":109:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function Fpeek (Fpeek, funcdef_no=17, decl_uid=3080, cgraph_uid=18, symbol_order=17)

double Fpeek (const struct Stack_f * stack)
{
  double D.3154;
  long unsigned int _1;
  double * _2;
  long unsigned int _3;
  long unsigned int _4;
  sizetype _5;
  double * _6;
  double _9;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = stack_8(D)->top;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
  _2 = stack_8(D)->data;
  _3 = stack_8(D)->top;
  _4 = _3 * 8;
  _5 = _4 + 18446744073709551608;
  _6 = _2 + _5;
  _9 = *_6;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       3
<L2>:
  return _9;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 8 (stack_8(D) - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10(D) - 10 )


Coalescible Partition map 

Partition 0, base 0 (stack_8(D) - 8 )
Partition 1, base 1 (_10(D) - 10 )


Partition map 

Partition 0 (stack_8(D) - 8 )
Partition 1 (_10(D) - 10 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (stack_8(D) - 8 )
Partition 1 (_10(D) - 10 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (stack_8(D) - 8 )
Partition 7 (_9 - 9 )
Partition 8 (_10(D) - 10 )

double Fpeek (const struct Stack_f * stack)
{
  double D.3154;
  long unsigned int _1;
  double * _2;
  long unsigned int _3;
  long unsigned int _4;
  sizetype _5;
  double * _6;
  double _9;
  double _10(D);

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = stack_8(D)->top;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
  _2 = stack_8(D)->data;
  _3 = stack_8(D)->top;
  _4 = _3 * 8;
  _5 = _4 + 18446744073709551608;
  _6 = _2 + _5;
  _9 = *_6;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       3
<L2>:
  return _9;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = stack_8(D)->top;

(insn 6 5 7 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":111:14 -1
     (nil))

(insn 7 6 0 (set (reg:DI 82 [ _1 ])
        (mem:DI (plus:DI (reg/f:DI 90)
                (const_int 16 [0x10])) [4 stack_8(D)->top+0 S8 A64])) "a.c":111:14 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _2 = stack_8(D)->data;

(insn 9 8 10 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":114:17 -1
     (nil))

(insn 10 9 0 (set (reg/f:DI 83 [ _2 ])
        (mem/f:DI (reg/f:DI 91) [8 stack_8(D)->data+0 S8 A64])) "a.c":114:17 -1
     (nil))

;; _3 = stack_8(D)->top;

(insn 11 10 12 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":114:29 -1
     (nil))

(insn 12 11 0 (set (reg:DI 84 [ _3 ])
        (mem:DI (plus:DI (reg/f:DI 92)
                (const_int 16 [0x10])) [4 stack_8(D)->top+0 S8 A64])) "a.c":114:29 -1
     (nil))

;; _4 = _3 * 8;

(insn 13 12 0 (parallel [
            (set (reg:DI 85 [ _4 ])
                (ashift:DI (reg:DI 84 [ _3 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":114:23 -1
     (nil))

;; _5 = _4 + 18446744073709551608;

(insn 14 13 0 (parallel [
            (set (reg:DI 86 [ _5 ])
                (plus:DI (reg:DI 85 [ _4 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":114:23 -1
     (nil))

;; _6 = _2 + _5;

(insn 15 14 0 (parallel [
            (set (reg/f:DI 87 [ _6 ])
                (plus:DI (reg/f:DI 83 [ _2 ])
                    (reg:DI 86 [ _5 ])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":114:23 -1
     (nil))

;; _9 = *_6;

(insn 16 15 0 (set (reg:DF 88 [ _9 ])
        (mem:DF (reg/f:DI 87 [ _6 ]) [10 *_6+0 S8 A64])) "a.c":114:23 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; <L2>:

(code_label 17 16 18 22 (nil) [0 uses])

(note 18 17 0 NOTE_INSN_BASIC_BLOCK)

;; return _9;

(insn 19 18 20 (set (reg:DF 89 [ <retval> ])
        (reg:DF 88 [ _9 ])) "a.c":114:23 -1
     (nil))

(jump_insn 20 19 21 (set (pc)
        (label_ref 0)) "a.c":114:23 -1
     (nil))

(barrier 21 20 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.
Removing jump 20.
Merging block 6 into block 2...
Merged blocks 2 and 6.
Merged 2 and 6 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])
        (reg:DI 5 di [ stack ])) "a.c":110:36 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":111:14 -1
     (nil))
(insn 7 6 9 2 (set (reg:DI 82 [ _1 ])
        (mem:DI (plus:DI (reg/f:DI 90)
                (const_int 16 [0x10])) [4 stack_8(D)->top+0 S8 A64])) "a.c":111:14 -1
     (nil))
(insn 9 7 10 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":114:17 -1
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 83 [ _2 ])
        (mem/f:DI (reg/f:DI 91) [8 stack_8(D)->data+0 S8 A64])) "a.c":114:17 -1
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 stack+0 S8 A64])) "a.c":114:29 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 84 [ _3 ])
        (mem:DI (plus:DI (reg/f:DI 92)
                (const_int 16 [0x10])) [4 stack_8(D)->top+0 S8 A64])) "a.c":114:29 -1
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 85 [ _4 ])
                (ashift:DI (reg:DI 84 [ _3 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":114:23 -1
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg:DI 86 [ _5 ])
                (plus:DI (reg:DI 85 [ _4 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":114:23 -1
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg/f:DI 87 [ _6 ])
                (plus:DI (reg/f:DI 83 [ _2 ])
                    (reg:DI 86 [ _5 ])))
            (clobber (reg:CC 17 flags))
        ]) "a.c":114:23 -1
     (nil))
(insn 16 15 19 2 (set (reg:DF 88 [ _9 ])
        (mem:DF (reg/f:DI 87 [ _6 ]) [10 *_6+0 S8 A64])) "a.c":114:23 -1
     (nil))
(insn 19 16 23 2 (set (reg:DF 89 [ <retval> ])
        (reg:DF 88 [ _9 ])) "a.c":114:23 -1
     (nil))
(insn 23 19 24 2 (set (reg/i:DF 20 xmm0)
        (reg:DF 89 [ <retval> ])) "a.c":115:1 -1
     (nil))
(insn 24 23 0 2 (use (reg/i:DF 20 xmm0)) "a.c":115:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

